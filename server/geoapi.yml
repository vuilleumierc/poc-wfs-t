# Path: pygeoapi.yml
# setup pygeoapi to serve postgis data
# https://docs.pygeoapi.io/en/latest/configuration.html
server:
  bind:
      host: 0.0.0.0  # listening address for incoming connections
      port: 5000  # listening port for incoming connections
  url: http://localhost:5000/  # url of server
  mimetype: application/json; charset=UTF-8  # default MIME type
  encoding: utf-8  # default server encoding
  language: en-US  # default server language
  locale_dir: /path/to/translations
  gzip: false # default server config to gzip/compress responses to requests with gzip in the Accept-Encoding header
  cors: true  # boolean on whether server should support CORS
  pretty_print: true  # whether JSON responses should be pretty-printed
  limit: 150  # server limit on number of items to return

  templates: # optional configuration to specify a different set of templates for HTML pages. Recommend using absolute paths. Omit this to use the default provided templates
    path: /path/to/jinja2/templates/folder # path to templates folder containing the Jinja2 template HTML files
    static: /path/to/static/folder # path to static folder containing css, js, images and other static files referenced by the template

  map:  # leaflet map setup for HTML pages
    url: https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}.png
    attribution: '<a href="https://wikimediafoundation.org/wiki/Maps_Terms_of_Use">Wikimedia maps</a> | Map data &copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
  ogc_schemas_location: /opt/schemas.opengis.net  # local copy of https://schemas.opengis.net

  manager:  # optional OGC API - Processes asynchronous job management
    name: TinyDB  # plugin name (see pygeoapi.plugin for supported process_manager's)
    connection: /tmp/pygeoapi-process-manager.db  # connection info to store jobs (e.g. filepath)
    output_dir: /tmp/  # temporary file area for storing job results (files)

  api_rules:  # optional API design rules to which pygeoapi should adhere
    api_version: 1.2.3  # omit to use pygeoapi's software version
    strict_slashes: true  # trailing slashes will not be allowed and result in a 404
    url_prefix: 'v{api_major}'  # adds a /v1 prefix to all URL paths
    version_header: X-API-Version  # add a response header of this name with the API version
logging:
  level: ERROR  # the logging level (see https://docs.python.org/3/library/logging.html#logging-levels)
  logfile: /tmp/pygeoapi.log 

metadata:
  identification:
    title: pygeoapi default instance  # the title of the service
    description: pygeoapi provides an API to geospatial data  # some descriptive text about the service
    keywords:  # list of keywords about the service
        - geospatial
        - data
        - api
    keywords_type: theme  # keyword type as per the ISO 19115 MD_KeywordTypeCode codelist. Accepted values are discipline, temporal, place, theme, stratum
    terms_of_service: https://creativecommons.org/licenses/by/4.0/  # terms of service
    url: http://example.org  # informative URL about the service
  license:  # licensing details
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  provider:  # service provider details
    name: Organization Name
    url: https://pygeoapi.io
  contact:  # service contact details
    name: Lastname, Firstname
    position: Position Title
    address: Mailing Address
    city: City
    stateorprovince: Administrative Area
    postalcode: Zip or Postal Code
    country: Country
    phone: +xx-xxx-xxx-xxxx
    fax: +xx-xxx-xxx-xxxx
    email: you@example.org
    url: Contact URL
    hours: Mo-Fr 08:00-17:00
    instructions: During hours of service. Off on weekends.
    role: pointOfContact

resources:
  locations:
    type: collection
    visibility: public
    title: ELD locations
    extents:
      spatial:
        bbox: [-180, -90, 180, 90]
        crs: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      temporal:
        interval: [1900-01-01T00:00:00Z, 2100-01-01T00:00:00Z]
        TRS: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
    providers:
      - type: feature
        default: true
        name: PostgreSQL # Name of the provider
        data:
            host: postgres
            port: 5432 # Default 5432 if not provided
            dbname: postgres
            user: postgres
            password: postgres
            search_path: [public]
        id_field: id
        table: locations
        geom_field: geometry  
